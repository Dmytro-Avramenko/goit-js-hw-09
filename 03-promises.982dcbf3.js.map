{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAgBxC,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAaC,KAAKC,SAAW,GAEnCC,YAAW,KACLH,GACFF,EAAQ,YAERM,QAAQC,IAAI,wBAAqBV,EAAa,QAASC,OACvDU,EAAAjB,GAASkB,OAAOC,QACd,uBAAoBb,EAAa,QAASC,SAG5CG,EAAO,SAEPK,QAAQC,IAAI,uBAAoBV,EAAa,QAASC,OACtDU,EAAAjB,GAASkB,OAAOE,QACd,uBAAoBd,EAAU,QAASC,O,GAG1CA,EAAM,G,CAlCbL,EAASmB,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOvB,EAASK,MAAMmB,OACnCC,EAAYF,OAAOvB,EAAS0B,KAAKF,OACjCG,EAAiBJ,OAAOvB,EAAS4B,OAAOJ,OAE5C,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAgBE,GAAK,EAAG,CAE1C1B,EAAc0B,EADKP,EAAaO,EAAIJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsForm = document.querySelector('.form');\n\nrefsForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let firstDelay = Number(refsForm.delay.value);\n  let stepDelay = Number(refsForm.step.value);\n  let positionAmount = Number(refsForm.amount.value);\n\n  for (let i = 0; i < positionAmount; i += 1) {\n    const totaldelay = firstDelay + i * stepDelay;\n    createPromise(i, totaldelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const canFulfill = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (canFulfill) {\n        resolve('Succsess');\n        \n        console.log(`ðŸ˜€ Fulfilled promise ${position + 1} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `ðŸ˜€Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      } else {\n        reject('Error');\n\n        console.log(`ðŸ˜¡ Rejected promise ${position + 1} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `ðŸ˜¡ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refsForm","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","canFulfill","Math","random","setTimeout","console","log","$parcel$interopDefault","Notify","success","failure","addEventListener","e","preventDefault","firstDelay","Number","value","stepDelay","step","positionAmount","amount","i"],"version":3,"file":"03-promises.982dcbf3.js.map"}