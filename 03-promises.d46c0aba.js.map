{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAExC,IAAIC,EAAa,KACbC,EAAY,KACZC,EAAY,KAEhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAwBb,SAASO,GAAUR,SAAEA,EAAQC,MAAEA,IAC7BQ,QAAQC,IAAI,wBAAqBV,QAAkBC,OACnDU,EAAApB,GAASqB,OAAOC,QAAQ,wBAAqBb,QAAkBC,M,CAGjE,SAASa,GAAQd,SAAEA,EAAQC,MAAEA,IAC3BQ,QAAQC,IAAI,uBAAoBV,QAAkBC,OAClDU,EAAApB,GAASqB,OAAOG,QAAQ,uBAAoBf,QAAeC,M,CA3B7DR,EAASuB,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAEC,iBAEF,MACEC,UAAUlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN1B,EAAa2B,OAAOtB,EAAMuB,OAC1B3B,EAAY0B,OAAOH,EAAKI,OACxB1B,EAAYyB,OAAOF,EAAOG,OAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAK3B,EAAW2B,IAC9B1B,EAAc0B,EAAG7B,GAAY8B,KAAKlB,GAAWmB,MAAMb,GACnDlB,GAAcC,EAEhBoB,EAAEK,cAAcM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsForm = document.querySelector('.form');\n\nlet firstDelay = null;\nlet stepDelay = null;\nlet amountInp = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } \n      reject({ position, delay })\n    }, delay);\n  });\n};\n\nrefsForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault(); \n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n   \n  firstDelay = Number(delay.value);\n  stepDelay = Number(step.value);\n  amountInp = Number(amount.value);\n\n  for (let i = 1; i <= amountInp; i++) {\n    createPromise(i, firstDelay).then(onSuccess).catch(onError);         \n    firstDelay += stepDelay;\n  };  \n  e.currentTarget.reset();\n};\n\nfunction onSuccess({ position, delay }) {\n  console.log(`ðŸ˜€ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`ðŸ˜€ Fulfilled promise ${position} in ${delay}ms`);\n};\n  \nfunction onError({ position, delay }) {\n  console.log(`ðŸ˜¡ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`ðŸ˜¡ Rejected promise ${position} in ${delay}ms`);\n}; "],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refsForm","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amountInp","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onSuccess","console","log","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","e","preventDefault","elements","step","amount","currentTarget","Number","value","i","then","catch","reset"],"version":3,"file":"03-promises.d46c0aba.js.map"}