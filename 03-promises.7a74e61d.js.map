{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,SAgBxC,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAaC,KAAKC,SAAW,GAEnCC,YAAW,WACLH,GACFF,EAAQ,YAERM,QAAQC,IAAI,wBAA6CC,OAAnBX,EAAW,EAAE,QAAYW,OAANV,EAAM,OAC/DW,EAAAlB,GAASmB,OAAOC,QACd,uBAA4CH,OAAnBX,EAAW,EAAE,QAAYW,OAANV,EAAM,SAGpDG,EAAO,SAEPK,QAAQC,IAAI,uBAA4CC,OAAnBX,EAAW,EAAE,QAAYW,OAANV,EAAM,OAC9DW,EAAAlB,GAASmB,OAAOE,QACd,uBAAyCJ,OAAnBX,EAAW,EAAE,QAAYW,OAANV,EAAM,O,GAGlDA,E,IAlCPL,EAASoB,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOxB,EAASK,MAAMoB,OACnCC,EAAYF,OAAOxB,EAAS2B,KAAKF,OACjCG,EAAiBJ,OAAOxB,EAAS6B,OAAOJ,OAEnCK,EAAI,EAAGA,EAAIF,EAAgBE,GAAK,EAAG,CAE1C3B,EAAc2B,EADKP,EAAaO,EAAIJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsForm = document.querySelector('.form');\n\nrefsForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let firstDelay = Number(refsForm.delay.value);\n  let stepDelay = Number(refsForm.step.value);\n  let positionAmount = Number(refsForm.amount.value);\n\n  for (let i = 0; i < positionAmount; i += 1) {\n    const totaldelay = firstDelay + i * stepDelay;\n    createPromise(i, totaldelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const canFulfill = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (canFulfill) {\n        resolve('Succsess');\n        \n        console.log(`ðŸ˜€ Fulfilled promise ${position + 1} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `ðŸ˜€Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      } else {\n        reject('Error');\n\n        console.log(`ðŸ˜¡ Rejected promise ${position + 1} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `ðŸ˜¡ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refsForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","canFulfill","Math","random","setTimeout","console","log","concat","$parcel$interopDefault","Notify","success","failure","addEventListener","e","preventDefault","firstDelay","Number","value","stepDelay","step","positionAmount","amount","i"],"version":3,"file":"03-promises.7a74e61d.js.map"}