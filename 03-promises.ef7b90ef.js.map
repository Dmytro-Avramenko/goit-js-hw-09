{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,SAEpCC,EAAa,KACbC,EAAY,KACZC,EAAY,KAEhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEpCJ,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAwBP,SAASO,EAAUC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC7BS,QAAQC,IAAI,wBAAyCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAC3DY,EAAAtB,GAASuB,OAAOC,QAAQ,wBAAyCH,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAGzE,SAASe,EAAQP,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC3BS,QAAQC,IAAI,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAC1DY,EAAAtB,GAASuB,OAAOG,QAAQ,uBAAqCL,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CA3BrER,EAASyB,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYtB,EAAKoB,EAALpB,MAAOuB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3B7B,EAAa8B,OAAOzB,EAAM0B,OAC1B9B,EAAY6B,OAAOF,EAAKG,OACxB7B,EAAY4B,OAAOD,EAAOE,OAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAW8B,GAAK,EAClC7B,EAAc6B,EAAGhC,GAAYiC,KAAKrB,GAAWsB,MAAMd,GACnDpB,GAAcC,EAEhBsB,EAAEG,cAAcS,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsForm = document.querySelector('.form');\n\nlet firstDelay = null;\nlet stepDelay = null;\nlet amountInp = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } \n      reject({ position, delay })\n    }, delay);\n  });\n};\n\nrefsForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault(); \n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n   \n  firstDelay = Number(delay.value);\n  stepDelay = Number(step.value);\n  amountInp = Number(amount.value);\n\n  for (let i = 1; i < amountInp; i += 1) {\n    createPromise(i, firstDelay).then(onSuccess).catch(onError);         \n    firstDelay += stepDelay;\n  };  \n  e.currentTarget.reset();\n};\n\nfunction onSuccess({ position, delay }) {\n  console.log(`ðŸ˜€ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`ðŸ˜€ Fulfilled promise ${position} in ${delay}ms`);\n};\n  \nfunction onError({ position, delay }) {\n  console.log(`ðŸ˜¡ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`ðŸ˜¡ Rejected promise ${position} in ${delay}ms`);\n}; "],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refsForm","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountInp","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onSuccess","param","console","log","concat","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onError","failure","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","Number","value","i","then","catch","reset"],"version":3,"file":"03-promises.ef7b90ef.js.map"}